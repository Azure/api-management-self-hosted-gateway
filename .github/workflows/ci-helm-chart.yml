name: Helm Chart CI
on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:

env:
  GATEWAY_CONFIG_URL: apim-oss.configuration.azure-api.net
  # This is a test key and not related to production
  # We cannot use GitHub's secrets, or the CI will always fail in PRs given they are not provided to forks
  # pull_request_target can be an alternative but always runs from the main branch's context https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request_target
  GATEWAY_TEST_KEY: "GatewayKey GitHub&202209161329&4riPnTDEJ76ayXZbGQTy2Xv02cnVWi5vgXVQhg84MDUV7AwiLAr0PdnBUlvwBYz/J3TONn/dMboeW9AQ7apTjg=="

jobs:
  lint-helm-3-x:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Helm install
      uses: Azure/setup-helm@v1

    - name: Lint 'azure-api-management-gateway' Helm chart
      # We are using dummy gateway parameters here just to show how you can pass them as they are required
      run: helm lint helm-charts/azure-api-management-gateway --set gateway.configuration.uri="${{ env.GATEWAY_CONFIG_URL }}" --set gateway.auth.key="${{ env.GATEWAY_TEST_KEY }}"

  deploy-helm-3-x:
    runs-on: ubuntu-latest
    needs: lint-helm-3-x
    strategy:
      fail-fast: false
      matrix:
        enableHighAvailability: [false, true]
        kubernetesVersion: [v1.24, v1.23, v1.22, v1.21, v1.20, v1.19, v1.18, v1.17]
        include:
          # Images are defined on every Kind release
          # See https://github.com/kubernetes-sigs/kind/releases for an overview of the images
        - kubernetesVersion: v1.24
          kindImage: kindest/node:v1.24.0@sha256:406fd86d48eaf4c04c7280cd1d2ca1d61e7d0d61ddef0125cb097bc7b82ed6a1
        - kubernetesVersion: v1.23
          kindImage: kindest/node:v1.23.6@sha256:1af0f1bee4c3c0fe9b07de5e5d3fafeb2eec7b4e1b268ae89fcab96ec67e8355
        - kubernetesVersion: v1.22
          kindImage: kindest/node:v1.22.9@sha256:6e57a6b0c493c7d7183a1151acff0bfa44bf37eb668826bf00da5637c55b6d5e
        - kubernetesVersion: v1.21
          kindImage: kindest/node:v1.21.12@sha256:ae05d44cc636ee961068399ea5123ae421790f472c309900c151a44ee35c3e3e
        - kubernetesVersion: v1.20
          kindImage: kindest/node:v1.20.15@sha256:a6ce604504db064c5e25921c6c0fffea64507109a1f2a512b1b562ac37d652f3
        - kubernetesVersion: v1.19
          kindImage: kindest/node:v1.19.16@sha256:dec41184d10deca01a08ea548197b77dc99eeacb56ff3e371af3193c86ca99f4
        - kubernetesVersion: v1.18
          kindImage: kindest/node:v1.18.20@sha256:38a8726ece5d7867fb0ede63d718d27ce2d41af519ce68be5ae7fcca563537ed
        - kubernetesVersion: v1.17
          kindImage: kindest/node:v1.17.17@sha256:66f1d0d91a88b8a001811e2f1054af60eef3b669a9a74f9b6db871f2f1eeed00
    name: Deploy to Kubernetes ${{ matrix.kubernetesVersion }} (${{ (matrix.enableHighAvailability == true && 'With HA') || 'Without HA' }})
    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Helm install
      uses: Azure/setup-helm@v1
      
    - name: Create k8s ${{ matrix.kubernetesVersion }} Kind Cluster
      uses: helm/kind-action@v1.2.0
      with:
        version: v0.13.0
        node_image: ${{ matrix.kindImage }}

    - name: Show Kubernetes version
      run: |
        kubectl version

    - name: Show Kubernetes nodes
      run: |
        kubectl get nodes -o wide

    - name: Show Helm version
      run: |
        helm version

    - name: Create Kubernetes namespace
      run: kubectl create ns apim-gateway

    - name: Template Helm chart
      run: helm install azure-api-management-gateway ./helm-charts/azure-api-management-gateway --namespace apim-gateway --set gateway.configuration.uri="${{ env.GATEWAY_CONFIG_URL }}" --set gateway.auth.key="${{ env.GATEWAY_TEST_KEY }}" --set highAvailability.enabled=${{ matrix.enableHighAvailability }} --values ./test-config.yml --dry-run

    - name: Install Helm chart
      run: helm install azure-api-management-gateway ./helm-charts/azure-api-management-gateway --namespace apim-gateway --set gateway.configuration.uri="${{ env.GATEWAY_CONFIG_URL }}" --set gateway.auth.key="${{ env.GATEWAY_TEST_KEY }}" --set highAvailability.enabled=${{ matrix.enableHighAvailability }} --values ./test-config.yml --wait --timeout 10m0s

    - name: Show Kubernetes resources
      run: kubectl get all --namespace apim-gateway
      if: always()

    - name: Show Logs for Self-Hosted Gateway
      run: kubectl logs -l app.kubernetes.io/name=azure-api-management-gateway --namespace apim-gateway
      if: always()
